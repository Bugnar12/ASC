     1                                  ; Codul de mai jos va deschide un fisier numit "input.txt" din directorul curent si va citi intregul text din acel fisier, in etape, cate 100 de caractere intr-o etapa.
     2                                  ; Deoarece un fisier text poate fi foarte lung, nu este intotdeauna posibil sa citim fisierul intr-o singura etapa pentru ca nu putem defini un sir de caractere suficient de lung pentru intregul text din fisier. De 
     3                                  ; Programul va folosi functia fopen pentru deschiderea fisierului, functia fread pentru citirea din fisier si functia fclose pentru inchiderea fisierului creat.
     4                                  ; Deoarece in apelul functiei fopen programul foloseste modul de acces "r", daca un fisier numele dat nu exista in directorul curent,  apelul functiei fopen nu va reusi (eroare). Detalii despre modurile de acces sun
     5                                  
     6                                  bits 32 
     7                                  
     8                                  global start        
     9                                  
    10                                  ; declare external functions needed by our program
    11                                  extern exit, fopen, fclose, fread, printf
    12                                  import exit msvcrt.dll 
    13                                  import fopen msvcrt.dll 
    14                                  import fread msvcrt.dll 
    15                                  import fclose msvcrt.dll 
    16                                  import printf msvcrt.dll
    17                                  
    18                                  ; our data is declared here 
    19                                  segment data use32 class=data
    20 00000000 696E7075742E747874-         nume_fisier db "input.txt", 0   ; numele fisierului care va fi deschis
    20 00000009 00                 
    21 0000000A 7200                        mod_acces db "r", 0             ; modul de deschidere a fisierului; r - pentru scriere. fisierul trebuie sa existe 
    22 0000000C FFFFFFFF                    descriptor_fis dd -1            ; variabila in care vom salva descriptorul fisierului - necesar pentru a putea face referire la fisier
    23 00000010 00000000                    nr_car_citite dd 0              ; variabila in care vom salva numarul de caractere citit din fisier in etapa curenta
    24                                      len equ 100                     ; numarul maxim de elemente citite din fisier intr-o etapa
    25 00000014 <res 00000064>              buffer resb len                 ; sirul in care se va citi textul din fisier
    26 00000078 2564257300                  format db "%d%s", 0
    27                                  
    28                                  ; our code starts here
    29                                  segment code use32 class=code
    30                                      start:
    31                                          ; apelam fopen pentru a deschide fisierul
    32                                          ; functia va returna in EAX descriptorul fisierului sau 0 in caz de eroare
    33                                          ; eax = fopen(nume_fisier, mod_acces)
    34 00000000 68[0A000000]                    push dword mod_acces
    35 00000005 68[00000000]                    push dword nume_fisier
    36 0000000A FF15[00000000]                  call [fopen]
    37 00000010 83C408                          add esp, 4*2
    38                                          
    39                                          ; verificam daca functia fopen a creat cu succes fisierul (daca EAX != 0)
    40 00000013 83F800                          cmp eax, 0                  
    41 00000016 7452                            je final
    42                                          
    43 00000018 A3[0C000000]                    mov [descriptor_fis], eax   ; salvam valoarea returnata de fopen in variabila descriptor_fis
    44                                          
    45                                          ; echivalentul in pseudocod al urmatoarei secvente de cod este:
    46                                          ;repeta
    47                                          ;   nr_car_citite = fread(buffer, 1, len, descriptor_fis)
    48                                          ;   daca nr_car_citite > 0
    49                                          ;       ; instructiuni pentru procesarea caracterelor citite in aceasta etapa
    50                                          ;pana cand nr_car_citite == 0
    51                                          
    52                                          bucla:
    53                                              ; citim o parte (100 caractere) din textul in fisierul deschis folosind functia fread
    54                                              ; eax = fread(buffer, 1, len, descriptor_fis)
    55 0000001D FF35[0C000000]                      push dword [descriptor_fis]
    56 00000023 6A64                                push dword len
    57 00000025 6A01                                push dword 1
    58 00000027 68[14000000]                        push dword buffer
    59 0000002C FF15[00000000]                      call [fread]
    60 00000032 83C410                              add esp, 4*4
    61                                              
    62                                              ; eax = numar de caractere / bytes citite
    63 00000035 83F800                              cmp eax, 0          ; daca numarul de caractere citite este 0, am terminat de parcurs fisierul
    64 00000038 7408                                je cleanup
    65                                  
    66 0000003A 0105[10000000]                      add dword [nr_car_citite], eax        ; salvam numarul de caractere citie
    67                                              
    68                                              ; instructiunile pentru procesarea caracterelor citite in aceasta etapa incep aici
    69                                              ; ...
    70                                              
    71                                              ; reluam bucla pentru a citi alt bloc de caractere
    72 00000040 EBDB                                jmp bucla
    73                                          
    74                                        cleanup:
    75 00000042 68[14000000]                    push dword buffer
    76 00000047 FF35[10000000]                  push dword [nr_car_citite]
    77 0000004D 68[78000000]                    push dword format
    78 00000052 FF15[00000000]                  call [printf]
    79 00000058 83C40C                          add esp, 12
    80                                          
    81                                          
    82 0000005B FF35[0C000000]                  push dword [descriptor_fis]
    83 00000061 FF15[00000000]                  call [fclose]
    84 00000067 83C404                          add esp, 4
    85                                          
    86                                        final:  
    87                                          ; exit(0)
    88 0000006A 6A00                            push    dword 0      
    89 0000006C FF15[00000000]                  call    [exit]       
